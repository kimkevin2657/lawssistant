<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
            <argument>%kernel.project_dir%/config/secrets/%kernel.environment%</argument>
            <argument type="service" id="secrets.decryption_key" on-invalid="ignore" />
        </service>

        <!--
            LazyString::fromCallable() is used as a wrapper to lazily read the SYMFONY_DECRYPTION_SECRET var from the env.
            By overriding this service and using the same strategy, the decryption key can be fetched lazily from any other service if needed.
        -->
        <service id="secrets.decryption_key" class="Symfony\Component\DependencyInjection\LazyString">
            <factory class="Symfony\Component\DependencyInjection\LazyString" method="fromCallable" />
            <argument type="service">
                <service class="Closure">
                    <factory class="Closure" method="fromCallable" />
                    <argument type="collection">
                        <argument type="service" id="service_container" />
                        <argument>getEnv</argument>
                    </argument>
                </service>
            </argument>
            <argument>base64:default::SYMFONY_DECRYPTION_SECRET</argument>
        </service>

        <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
            <argument>%kernel.project_dir%/.env.local</argument>
        </service>

        <service id="secrets.env_var_processor" class="Symfony\Bundle\FrameworkBundle\Secrets\SecretEnvVarProcessor">
            <argument type="service" id="secrets.vault" />
            <argument type="service" id="secrets.local_vault" on-invalid="ignore" />
            <tag name="container.env_var_processor" />
        </service>
    </services>
</container>
